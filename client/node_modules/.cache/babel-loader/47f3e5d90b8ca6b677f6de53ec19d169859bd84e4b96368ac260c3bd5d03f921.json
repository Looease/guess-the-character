{"ast":null,"code":"// import { environment } from '@utils/get-environment-variable';\nimport{useQuery}from\"react-query\";export const useGetCharacters=()=>{const fetchUrl=\"http://localhost:8000/quiz\";return useQuery({queryKey:[\"characters\"],queryFn:async()=>{const response=await fetch(fetchUrl,{method:\"GET\",credentials:\"include\",mode:\"cors\"});if(!response.ok){const caughtError=new Error(JSON.stringify({statusCode:response===null||response===void 0?void 0:response.status}));throw caughtError;}return await response.json();}});};","map":{"version":3,"names":["useQuery","useGetCharacters","fetchUrl","queryKey","queryFn","response","fetch","method","credentials","mode","ok","caughtError","Error","JSON","stringify","statusCode","status","json"],"sources":["/Users/louisegilligan/GitRepos/guess-the-character/client/src/hooks/useGetCharacters.tsx"],"sourcesContent":["// import { environment } from '@utils/get-environment-variable';\nimport { useQuery } from \"react-query\";\n\nexport const useGetCharacters = () => {\n  const fetchUrl = \"http://localhost:8000/quiz\";\n\n  return useQuery({\n    queryKey: [\"characters\"],\n    queryFn: async () => {\n      const response = await fetch(fetchUrl, {\n        method: \"GET\",\n        credentials: \"include\",\n        mode: \"cors\",\n      });\n      if (!response.ok) {\n        const caughtError = new Error(\n          JSON.stringify({ statusCode: response?.status })\n        );\n\n        throw caughtError;\n      }\n\n      return await response.json();\n    },\n  });\n};\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,QAAQ,CAAG,4BAA4B,CAE7C,MAAO,CAAAF,QAAQ,CAAC,CACdG,QAAQ,CAAE,CAAC,YAAY,CAAC,CACxBC,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,QAAQ,CAAE,CACrCK,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CACtBC,IAAI,CAAE,MACR,CAAC,CAAC,CACF,GAAI,CAACJ,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,KAAK,CAC3BC,IAAI,CAACC,SAAS,CAAC,CAAEC,UAAU,CAAEV,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEW,MAAO,CAAC,CACjD,CAAC,CAED,KAAM,CAAAL,WAAW,CACnB,CAEA,MAAO,MAAM,CAAAN,QAAQ,CAACY,IAAI,CAAC,CAAC,CAC9B,CACF,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/louisegilligan/GitRepos/guess-the-character/client/src/components/Answers/Answers.tsx\",\n  _s = $RefreshSig$();\nimport \"./Answers.css\";\nimport Results from \"../Results/Results\";\nimport { updateAnswer } from \"../../requests/updateAnswer\";\nimport { useLocalStorageState } from \"../../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Answers = ({\n  answers,\n  scores\n}) => {\n  _s();\n  const [answers1, setAnswers] = useLocalStorageState('answer', []);\n  window.localStorage.setItem(key, serialize(state));\n  const handleSetAnswer = () => {\n    if (scores !== null) {\n      setAnswers('answer', prevAnswers => [...prevAnswers, scores]);\n    }\n  };\n  console.log(answers1);\n  console.log(process.env);\n  console.log(scores);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [scores && scores.length <= 9 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: answers.map((answer, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            updateAnswer(answer);\n            handleSetAnswer();\n          },\n          children: answer.answer\n        }, `${answer.id}=${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scores && scores.length >= 10 && /*#__PURE__*/_jsxDEV(Results, {\n        scores: scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Answers, \"RwVKu7atCqQg+fdLBcQP1t6/Skc=\", false, function () {\n  return [useLocalStorageState];\n});\n_c = Answers;\nexport default Answers;\nvar _c;\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"names":["Results","updateAnswer","useLocalStorageState","jsxDEV","_jsxDEV","Answers","answers","scores","_s","answers1","setAnswers","window","localStorage","setItem","key","serialize","state","handleSetAnswer","prevAnswers","console","log","process","env","children","length","className","map","answer","index","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/louisegilligan/GitRepos/guess-the-character/client/src/components/Answers/Answers.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport \"./Answers.css\";\nimport { AnswerData } from \"../../pages/Game/Game.types\";\nimport Results from \"../Results/Results\";\nimport { updateAnswer } from \"../../requests/updateAnswer\";\nimport {useLocalStorageState} from \"../../hooks/useLocalStorage\"\n\ntype AnswersProps = {\n  answers: AnswerData[];\n  scores?: AnswerData[];\n};\n\nconst Answers: FC<AnswersProps> = ({ answers, scores }) => {\n\n  const [answers1, setAnswers] = useLocalStorageState(\n    'answer',\n    []\n  );\n  \n       window.localStorage.setItem(key, serialize(state));\n\n\n  const handleSetAnswer = () => {\n    if (scores !== null) {\n      setAnswers( 'answer',(prevAnswers: AnswerData[]) => [...prevAnswers, scores]);\n    }\n  };\n  \n\n  console.log(answers1)\n  \n\n  console.log(process.env);\n  console.log(scores)\n  return (\n    <div>\n      {scores && scores.length <= 9 && (\n        <div className=\"button-container\">\n          {answers.map((answer, index) => {\n            return (\n              <button\n                className=\"button\"\n                key={`${answer.id}=${index}`}\n                onClick={() => {updateAnswer(answer)\n                  handleSetAnswer()}\n              }\n              >\n                {answer.answer}\n              </button>\n            );\n          })}\n        </div>\n      )}\n      <div>{scores && scores.length >= 10 && <Results scores={scores} />}</div>\n    </div>\n  );\n};\n\nexport default Answers;\n"],"mappings":";;AACA,OAAO,eAAe;AAEtB,OAAOA,OAAO,MAAM,oBAAoB;AACxC,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAAQC,oBAAoB,QAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOhE,MAAMC,OAAyB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEzD,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGR,oBAAoB,CACjD,QAAQ,EACR,EACF,CAAC;EAEIS,MAAM,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,EAAEC,SAAS,CAACC,KAAK,CAAC,CAAC;EAGvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIV,MAAM,KAAK,IAAI,EAAE;MACnBG,UAAU,CAAE,QAAQ,EAAEQ,WAAyB,IAAK,CAAC,GAAGA,WAAW,EAAEX,MAAM,CAAC,CAAC;IAC/E;EACF,CAAC;EAGDY,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EAGrBU,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAAC;EACxBH,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;EACnB,oBACEH,OAAA;IAAAmB,QAAA,GACGhB,MAAM,IAAIA,MAAM,CAACiB,MAAM,IAAI,CAAC,iBAC3BpB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAC9BjB,OAAO,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC9B,oBACExB,OAAA;UACEqB,SAAS,EAAC,QAAQ;UAElBI,OAAO,EAAEA,CAAA,KAAM;YAAC5B,YAAY,CAAC0B,MAAM,CAAC;YAClCV,eAAe,CAAC,CAAC;UAAA,CACpB;UAAAM,QAAA,EAEEI,MAAM,CAACA;QAAM,GALR,GAAEA,MAAM,CAACG,EAAG,IAAGF,KAAM,EAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMtB,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACD9B,OAAA;MAAAmB,QAAA,EAAMhB,MAAM,IAAIA,MAAM,CAACiB,MAAM,IAAI,EAAE,iBAAIpB,OAAA,CAACJ,OAAO;QAACO,MAAM,EAAEA;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5CIH,OAAyB;EAAA,QAEEH,oBAAoB;AAAA;AAAAiC,EAAA,GAF/C9B,OAAyB;AA8C/B,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
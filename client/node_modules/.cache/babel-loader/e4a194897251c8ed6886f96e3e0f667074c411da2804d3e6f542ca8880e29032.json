{"ast":null,"code":"import { getUrl } from \"../utils/getUrl\";\nexport const handleCheckAnswers = async (data, setSessionData, environment) => {\n  //TODO make enum list\n  const fetchUrl = getUrl('check-answers', environment);\n  try {\n    const response = await fetch(`${fetchUrl}`, {\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data) {\n        setSessionData(data.sessionData);\n      }\n    } else {\n      console.error(\"Failed to retrieve session data.\");\n    }\n  } catch (error) {\n    console.error(\"Error retrieving session data:\", error);\n  }\n};","map":{"version":3,"names":["getUrl","handleCheckAnswers","data","setSessionData","environment","fetchUrl","response","fetch","credentials","ok","json","sessionData","console","error"],"sources":["/Users/louisegilligan/GitRepos/guess-the-character/client/src/requests/handleCheckAnswers.tsx"],"sourcesContent":["import {getUrl} from \"../utils/getUrl\"\n\nexport const handleCheckAnswers = async (\n  data: any,\n  setSessionData: (data: any) => void,\n  environment?: string\n) => {\n\n  //TODO make enum list\n  const fetchUrl = getUrl('check-answers', environment)\n\n  try {\n    const response = await fetch(`${fetchUrl}`, {\n      credentials: \"include\",\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      if (data) {\n        setSessionData(data.sessionData);\n      }\n    } else {\n      console.error(\"Failed to retrieve session data.\");\n    }\n  } catch (error) {\n    console.error(\"Error retrieving session data:\", error);\n  }\n};\n"],"mappings":"AAAA,SAAQA,MAAM,QAAO,iBAAiB;AAEtC,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAChCC,IAAS,EACTC,cAAmC,EACnCC,WAAoB,KACjB;EAEH;EACA,MAAMC,QAAQ,GAAGL,MAAM,CAAC,eAAe,EAAEI,WAAW,CAAC;EAErD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,QAAS,EAAC,EAAE;MAC1CG,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMP,IAAI,GAAG,MAAMI,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAIR,IAAI,EAAE;QACRC,cAAc,CAACD,IAAI,CAACS,WAAW,CAAC;MAClC;IACF,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;IACnD;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/louisegilligan/GitRepos/guess-the-character/client/src/components/Answers/Answers.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Answers.css\";\nimport Results from \"../Results/Results\";\nimport { updateAnswer } from \"../../requests/updateAnswer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Answers = ({\n  answers,\n  scores\n}) => {\n  _s();\n  const [submittedAnswers, setSubmittedAnswers] = useState(() => {\n    const answersArray = localStorage.getItem(\"answerArray\");\n    if (answersArray) {\n      return JSON.parse(answersArray);\n    }\n  });\n  const handleSetAnswer = answer => {\n    const updatedAnswers = [answer, ...submittedAnswers];\n    localStorage.setItem(\"answerArray\", JSON.stringify(updatedAnswers));\n    setSubmittedAnswers(updatedAnswers);\n  };\n  console.log(submittedAnswers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [submittedAnswers.length <= 9 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: answers.map((answer, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            updateAnswer(answer);\n            handleSetAnswer(answer);\n          },\n          children: answer.answer\n        }, `${answer.id}=${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: submittedAnswers && submittedAnswers.length >= 10 && /*#__PURE__*/_jsxDEV(Results, {\n        scores: scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Answers, \"eQW4wEkoHFYKPpkGUIzjbbdxDgk=\");\n_c = Answers;\nexport default Answers;\nvar _c;\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"names":["useState","Results","updateAnswer","jsxDEV","_jsxDEV","Answers","answers","scores","_s","submittedAnswers","setSubmittedAnswers","answersArray","localStorage","getItem","JSON","parse","handleSetAnswer","answer","updatedAnswers","setItem","stringify","console","log","children","length","className","map","index","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/louisegilligan/GitRepos/guess-the-character/client/src/components/Answers/Answers.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport \"./Answers.css\";\nimport { AnswerData } from \"../../pages/Game/Game.types\";\nimport Results from \"../Results/Results\";\nimport { updateAnswer } from \"../../requests/updateAnswer\";\nimport {useLocalStorageState} from \"../../hooks/useLocalStorage\"\n\ntype AnswersProps = {\n  answers: AnswerData[];\n  scores?: AnswerData[];\n};\n\n\nconst Answers: FC<AnswersProps> = ({ answers, scores }) => {\n\n  const [submittedAnswers, setSubmittedAnswers] = useState(() => {\n    const answersArray = localStorage.getItem(\"answerArray\");\n    if(answersArray){\n      return JSON.parse(answersArray)\n    }\n  })\n    \n  const handleSetAnswer = (answer: AnswerData) => {\n    const updatedAnswers = [answer, ...submittedAnswers];\n    localStorage.setItem(\"answerArray\", JSON.stringify(updatedAnswers));\n    setSubmittedAnswers(updatedAnswers);\n  };\n\n  console.log(submittedAnswers)\n\n    return (\n    <div>\n      {submittedAnswers.length <= 9 && (\n        <div className=\"button-container\">\n          {answers.map((answer, index) => {\n            return (\n              <button\n                className=\"button\"\n                key={`${answer.id}=${index}`}\n                onClick={() => {updateAnswer(answer)\n                  handleSetAnswer(answer)\n                }}>\n                {answer.answer}\n              </button>\n            );\n          })}\n        </div>\n      )}\n      <div>{submittedAnswers && submittedAnswers.length >= 10 && <Results scores={scores} />}</div>\n    </div>\n  );\n};\n\nexport default Answers;\n"],"mappings":";;AAAA,SAAwBA,QAAQ,QAAQ,OAAO;AAC/C,OAAO,eAAe;AAEtB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,YAAY,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3D,MAAMC,OAAyB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEzD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC7D,MAAMW,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACxD,IAAGF,YAAY,EAAC;MACd,OAAOG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;IACjC;EACF,CAAC,CAAC;EAEF,MAAMK,eAAe,GAAIC,MAAkB,IAAK;IAC9C,MAAMC,cAAc,GAAG,CAACD,MAAM,EAAE,GAAGR,gBAAgB,CAAC;IACpDG,YAAY,CAACO,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,cAAc,CAAC,CAAC;IACnER,mBAAmB,CAACQ,cAAc,CAAC;EACrC,CAAC;EAEDG,OAAO,CAACC,GAAG,CAACb,gBAAgB,CAAC;EAE3B,oBACAL,OAAA;IAAAmB,QAAA,GACGd,gBAAgB,CAACe,MAAM,IAAI,CAAC,iBAC3BpB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAC9BjB,OAAO,CAACoB,GAAG,CAAC,CAACT,MAAM,EAAEU,KAAK,KAAK;QAC9B,oBACEvB,OAAA;UACEqB,SAAS,EAAC,QAAQ;UAElBG,OAAO,EAAEA,CAAA,KAAM;YAAC1B,YAAY,CAACe,MAAM,CAAC;YAClCD,eAAe,CAACC,MAAM,CAAC;UACzB,CAAE;UAAAM,QAAA,EACDN,MAAM,CAACA;QAAM,GAJR,GAAEA,MAAM,CAACY,EAAG,IAAGF,KAAM,EAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKtB,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACD7B,OAAA;MAAAmB,QAAA,EAAMd,gBAAgB,IAAIA,gBAAgB,CAACe,MAAM,IAAI,EAAE,iBAAIpB,OAAA,CAACH,OAAO;QAACM,MAAM,EAAEA;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEV,CAAC;AAACzB,EAAA,CAtCIH,OAAyB;AAAA6B,EAAA,GAAzB7B,OAAyB;AAwC/B,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}